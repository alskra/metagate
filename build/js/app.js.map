{"version":3,"sources":["app.js","parts/helpers.js","../blocks/form-field-lbl/form-field-lbl.js","../blocks/line-chart/line-chart.js"],"names":["bemS","b","e","m","bemC","FormFieldLbl","s","settings","init","bindUIActions","$","document","on","addClass","removeClass","toggleClass","target","val","LineChart","min","max","values","lineChartArr","value","i","Math","random","push","round","console","log","from","Date","now","to","pointsX","forEach","item","arr","date","time","getMinutes","getHours","append","text","css","length","position","peity","join","window","change","width","minDelta","abs","clientX","point"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nlet bemS = (b, e = '', m = '') => '.' + b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class selector\n\nlet bemC = (b, e = '', m = '') => b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class\nconst FormFieldLbl = function () {\n  let s;\n  return {\n    settings: {\n      b: 'form-field-lbl'\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(document).on('focus', bemS(s.b), function () {\n        $(this).addClass(bemC(s.b, '', 'focus'));\n      }).on('blur', bemS(s.b), function (e) {\n        $(this).removeClass(bemC(s.b, '', 'focus'))\n          .toggleClass(bemC(s.b, '', 'has-value'), !!$(e.target).val());\n      });\n    }\n  }\n}();\n\nconst LineChart = function () {\n  let s;\n  return {\n    settings: {\n      b: 'line-chart',\n      // Пример установки значений\n      min: 1,\n      max: 5,\n      values: function () {\n        let lineChartArr = [], value;\n        for (let i = 0; i < 24*60 + 1; i++) {\n          value = Math.random()*5;\n          if (i > 0 && value - lineChartArr[i - 1] > 0.2) {\n            value = lineChartArr[i - 1] + Math.random()*0.2;\n          } else if (i > 0 && value - lineChartArr[i - 1] < -0.2) {\n            value = lineChartArr[i - 1] - Math.random()*0.2;\n          }\n          if (value < 1) value++;\n          lineChartArr.push(Math.round(value*100)/100);\n        }\n        console.log(lineChartArr);\n        return lineChartArr;\n      }(),\n      from: Date.now() - 24*3600*1000,\n      to: Date.now(),\n      pointsX: []\n    },\n    init: function () {\n      s = this.settings;\n\n      s.values.forEach(function (item, i, arr) {\n        let date = new Date(s.from + i*60000), time;\n        if (date.getMinutes() === 0) {\n          time = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':00';\n          $(bemS(s.b, 'axis-x')).append($('<div class=' + bemC(s.b, 'axis-x-point') + '></div>').text(time).css('left', i/(s.values.length - 1)*100 + '%'));\n          s.pointsX.push({position: i/(s.values.length - 1), value: item, time: time});\n        }\n      });\n      console.log(s.pointsX);\n\n      s.peity = $(bemS(s.b, 'peity')).text(s.values.join(',')).peity('line', {min: s.min, max: s.max});\n      $(window).on('resize.lineChart', function () {\n        s.peity.change();\n      });\n\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(bemS(s.b, 'inner')).on('mousemove', function (e) {\n        let width = $(this).width(), minDelta = Math.abs(e.clientX - s.pointsX[0].position*width), point = 0;\n        s.pointsX.forEach(function (item, i, arr) {\n          if (i > 0 && Math.abs(e.clientX - item.position*width) < minDelta) {\n            minDelta = Math.abs(e.clientX - item.position*width);\n            point = i;\n          }\n        });\n        $(bemS(s.b, 'label')).text(s.pointsX[point].value).css('left', s.pointsX[point].position*width + 'px');\n        console.log('Select point: ' + s.pointsX[point].value + ' - ' + s.pointsX[point].time);\n      });\n    }\n  }\n}();\n\n\n$(function () {\n  FormFieldLbl.init();\n\n  LineChart.init();\n});","let bemS = (b, e = '', m = '') => '.' + b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class selector\n\nlet bemC = (b, e = '', m = '') => b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class","const FormFieldLbl = function () {\n  let s;\n  return {\n    settings: {\n      b: 'form-field-lbl'\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(document).on('focus', bemS(s.b), function () {\n        $(this).addClass(bemC(s.b, '', 'focus'));\n      }).on('blur', bemS(s.b), function (e) {\n        $(this).removeClass(bemC(s.b, '', 'focus'))\n          .toggleClass(bemC(s.b, '', 'has-value'), !!$(e.target).val());\n      });\n    }\n  }\n}();\n","const LineChart = function () {\n  let s;\n  return {\n    settings: {\n      b: 'line-chart',\n      // Пример установки значений\n      min: 1,\n      max: 5,\n      values: function () {\n        let lineChartArr = [], value;\n        for (let i = 0; i < 24*60 + 1; i++) {\n          value = Math.random()*5;\n          if (i > 0 && value - lineChartArr[i - 1] > 0.2) {\n            value = lineChartArr[i - 1] + Math.random()*0.2;\n          } else if (i > 0 && value - lineChartArr[i - 1] < -0.2) {\n            value = lineChartArr[i - 1] - Math.random()*0.2;\n          }\n          if (value < 1) value++;\n          lineChartArr.push(Math.round(value*100)/100);\n        }\n        console.log(lineChartArr);\n        return lineChartArr;\n      }(),\n      from: Date.now() - 24*3600*1000,\n      to: Date.now(),\n      pointsX: []\n    },\n    init: function () {\n      s = this.settings;\n\n      s.values.forEach(function (item, i, arr) {\n        let date = new Date(s.from + i*60000), time;\n        if (date.getMinutes() === 0) {\n          time = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':00';\n          $(bemS(s.b, 'axis-x')).append($('<div class=' + bemC(s.b, 'axis-x-point') + '></div>').text(time).css('left', i/(s.values.length - 1)*100 + '%'));\n          s.pointsX.push({position: i/(s.values.length - 1), value: item, time: time});\n        }\n      });\n      console.log(s.pointsX);\n\n      s.peity = $(bemS(s.b, 'peity')).text(s.values.join(',')).peity('line', {min: s.min, max: s.max});\n      $(window).on('resize.lineChart', function () {\n        s.peity.change();\n      });\n\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(bemS(s.b, 'inner')).on('mousemove', function (e) {\n        let width = $(this).width(), minDelta = Math.abs(e.clientX - s.pointsX[0].position*width), point = 0;\n        s.pointsX.forEach(function (item, i, arr) {\n          if (i > 0 && Math.abs(e.clientX - item.position*width) < minDelta) {\n            minDelta = Math.abs(e.clientX - item.position*width);\n            point = i;\n          }\n        });\n        $(bemS(s.b, 'label')).text(s.pointsX[point].value).css('left', s.pointsX[point].position*width + 'px');\n        console.log('Select point: ' + s.pointsX[point].value + ' - ' + s.pointsX[point].time);\n      });\n    }\n  }\n}();\n"]}