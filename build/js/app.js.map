{"version":3,"sources":["app.js","parts/helpers.js","../blocks/form-field-lbl/form-field-lbl.js","../blocks/line-chart/line-chart.js"],"names":["bemS","b","e","m","bemC","FormFieldLbl","s","settings","init","bindUIActions","$","document","on","addClass","removeClass","toggleClass","target","val","LineChart","yMin","yMax","xMin","Date","now","xMax","currency","pointsX","values","lineChartArr","value","i","Math","random","push","round","forEach","item","arr","date","time","getMinutes","getHours","append","text","css","length","position","peity","join","min","max","attr","window","change","width","height","pointIndex","minDelta","abs","clientX","left","console","log"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nlet bemS = (b, e = '', m = '') => '.' + b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class selector\n\nlet bemC = (b, e = '', m = '') => b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class\nconst FormFieldLbl = function () {\n  let s;\n  return {\n    settings: {\n      b: 'form-field-lbl'\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(document).on('focus', bemS(s.b), function () {\n        $(this).addClass(bemC(s.b, '', 'focus'));\n      }).on('blur', bemS(s.b), function (e) {\n        $(this).removeClass(bemC(s.b, '', 'focus'))\n          .toggleClass(bemC(s.b, '', 'has-value'), !!$(e.target).val());\n      });\n    }\n  }\n}();\n\nconst LineChart = function () {\n  let s;\n  return {\n    settings: {\n      b: 'line-chart',\n      // Пример установки значений\n      yMin: 1,\n      yMax: 5,\n      xMin: Date.now() - 24*3600*1000,\n      xMax: Date.now(),\n      currency: '$',\n      pointsX: [],\n      values: function () {\n        let lineChartArr = [], value;\n        for (let i = 0; i < 24*60 + 1; i++) {\n          value = Math.random()*5;\n          if (i > 0 && value - lineChartArr[i - 1] > 0.2) {\n            value = lineChartArr[i - 1] + Math.random()*0.2;\n          } else if (i > 0 && value - lineChartArr[i - 1] < -0.2) {\n            value = lineChartArr[i - 1] - Math.random()*0.2;\n          }\n          if (value < 1) value++;\n          lineChartArr.push(Math.round(value*100)/100);\n        }\n        //console.log(lineChartArr);\n        return lineChartArr;\n      }()\n    },\n    init: function () {\n      s = this.settings;\n\n      s.values.forEach(function (item, i, arr) {\n        let date = new Date(s.xMin + i*60000), time;\n        if (date.getMinutes() === 0) {\n          time = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':00';\n          $(bemS(s.b, 'axis-x')).append($('<div class=' + bemC(s.b, 'axis-x-point') + '></div>').text(time).css('left', i/(s.values.length - 1)*100 + '%'));\n          s.pointsX.push({position: i/(s.values.length - 1), value: item, time: time});\n        }\n      });\n      //console.log(s.pointsX);\n\n      s.peity = $(bemS(s.b, 'peity')).text(s.values.join(',')).peity('line', {min: s.yMin, max: s.yMax});\n      $(bemS(s.b, 'ruler', 'min')).attr('data-ruler', s.currency + s.yMin);\n      $(bemS(s.b, 'ruler', 'max')).attr('data-ruler', s.currency + s.yMax);\n\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      // Update on resize\n      $(window).on('resize.lineChart', function () {\n        s.peity.change();\n      });\n\n      // Label on pointsX\n      $(bemS(s.b, 'inner')).on('mousemove', function (e) {\n        let width = $(this).width(),\n          height = $(this).height(),\n          pointIndex = 0,\n          minDelta = Math.abs(e.clientX - s.pointsX[0].position*width);\n        s.pointsX.forEach(function (item, i, arr) {\n          if (i > 0 && Math.abs(e.clientX - item.position*width) < minDelta) {\n            pointIndex = i;\n            minDelta = Math.abs(e.clientX - item.position*width);\n          }\n        });\n        $(bemS(s.b, 'label')).text(s.pointsX[pointIndex].value)\n          .css({left: s.pointsX[pointIndex].position*width, height: (s.pointsX[pointIndex].value - s.yMin)/(s.yMax - s.yMin)*height});\n        console.log('Current point: ' + s.pointsX[pointIndex].time + ' - ' + s.pointsX[pointIndex].value);\n      });\n    }\n  }\n}();\n\n\n$(function () {\n  FormFieldLbl.init();\n\n  LineChart.init();\n});","let bemS = (b, e = '', m = '') => '.' + b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class selector\n\nlet bemC = (b, e = '', m = '') => b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class","const FormFieldLbl = function () {\n  let s;\n  return {\n    settings: {\n      b: 'form-field-lbl'\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(document).on('focus', bemS(s.b), function () {\n        $(this).addClass(bemC(s.b, '', 'focus'));\n      }).on('blur', bemS(s.b), function (e) {\n        $(this).removeClass(bemC(s.b, '', 'focus'))\n          .toggleClass(bemC(s.b, '', 'has-value'), !!$(e.target).val());\n      });\n    }\n  }\n}();\n","const LineChart = function () {\n  let s;\n  return {\n    settings: {\n      b: 'line-chart',\n      // Пример установки значений\n      yMin: 1,\n      yMax: 5,\n      xMin: Date.now() - 24*3600*1000,\n      xMax: Date.now(),\n      currency: '$',\n      pointsX: [],\n      values: function () {\n        let lineChartArr = [], value;\n        for (let i = 0; i < 24*60 + 1; i++) {\n          value = Math.random()*5;\n          if (i > 0 && value - lineChartArr[i - 1] > 0.2) {\n            value = lineChartArr[i - 1] + Math.random()*0.2;\n          } else if (i > 0 && value - lineChartArr[i - 1] < -0.2) {\n            value = lineChartArr[i - 1] - Math.random()*0.2;\n          }\n          if (value < 1) value++;\n          lineChartArr.push(Math.round(value*100)/100);\n        }\n        //console.log(lineChartArr);\n        return lineChartArr;\n      }()\n    },\n    init: function () {\n      s = this.settings;\n\n      s.values.forEach(function (item, i, arr) {\n        let date = new Date(s.xMin + i*60000), time;\n        if (date.getMinutes() === 0) {\n          time = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':00';\n          $(bemS(s.b, 'axis-x')).append($('<div class=' + bemC(s.b, 'axis-x-point') + '></div>').text(time).css('left', i/(s.values.length - 1)*100 + '%'));\n          s.pointsX.push({position: i/(s.values.length - 1), value: item, time: time});\n        }\n      });\n      //console.log(s.pointsX);\n\n      s.peity = $(bemS(s.b, 'peity')).text(s.values.join(',')).peity('line', {min: s.yMin, max: s.yMax});\n      $(bemS(s.b, 'ruler', 'min')).attr('data-ruler', s.currency + s.yMin);\n      $(bemS(s.b, 'ruler', 'max')).attr('data-ruler', s.currency + s.yMax);\n\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      // Update on resize\n      $(window).on('resize.lineChart', function () {\n        s.peity.change();\n      });\n\n      // Label on pointsX\n      $(bemS(s.b, 'inner')).on('mousemove', function (e) {\n        let width = $(this).width(),\n          height = $(this).height(),\n          pointIndex = 0,\n          minDelta = Math.abs(e.clientX - s.pointsX[0].position*width);\n        s.pointsX.forEach(function (item, i, arr) {\n          if (i > 0 && Math.abs(e.clientX - item.position*width) < minDelta) {\n            pointIndex = i;\n            minDelta = Math.abs(e.clientX - item.position*width);\n          }\n        });\n        $(bemS(s.b, 'label')).text(s.pointsX[pointIndex].value)\n          .css({left: s.pointsX[pointIndex].position*width, height: (s.pointsX[pointIndex].value - s.yMin)/(s.yMax - s.yMin)*height});\n        console.log('Current point: ' + s.pointsX[pointIndex].time + ' - ' + s.pointsX[pointIndex].value);\n      });\n    }\n  }\n}();\n"]}