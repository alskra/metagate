{"version":3,"sources":["app.js","parts/helpers.js","../blocks/form-field-lbl/form-field-lbl.js","../blocks/form-select/form-select.js","../blocks/line-chart/line-chart.js","../blocks/select-sm/select-sm.js","../blocks/wallet/wallet.js"],"names":["bemS","b","e","m","bemC","FormFieldLbl","s","settings","$b","$","init","bindUIActions","each","toggleClass","find","val","document","on","addClass","removeClass","target","FormSelect","$filterOption","nextAll","end","clone","empty","append","selectpicker","style","LineChart","$eLabel","yMin","yMax","xMin","Date","now","xMax","currency","pointsX","values","lineChartArr","value","i","Math","random","push","round","forEach","item","arr","date","time","getMinutes","getHours","text","css","length","position","peity","join","min","max","attr","window","change","width","height","pointIndex","minDelta","abs","clientX","left","eq","SelectSm","Wallet","closest","popover"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nlet bemS = (b, e = '', m = '') => '.' + b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class selector\n\nlet bemC = (b, e = '', m = '') => b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class\nconst FormFieldLbl = function () {\n  const b = 'form-field-lbl';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n\n      s.$b.each(function () {\n        $(this).toggleClass(bemC(b, '', 'has-value'), !!$(this).find('input').val());\n      });\n    },\n    bindUIActions: function () {\n      $(document).on('focus', bemS(b), function () {\n        $(this).addClass(bemC(b, '', 'focus'));\n      }).on('blur', bemS(b), function (e) {\n        $(this).removeClass(bemC(b, '', 'focus'));\n      }).on('change', bemS(b), function (e) {\n        $(this).toggleClass(bemC(b, '', 'has-value'), !!$(e.target).val());\n      });\n    }\n  }\n}();\n\nconst FormSelect = function () {\n  const b = 'form-select';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n\n      s.$b.on('loaded.bs.select', function () {\n        let $filterOption = $(this)\n          .nextAll('.dropdown-menu').addClass(bemC(b, 'menu')).end()\n          .nextAll('.dropdown-toggle').removeClass('dropdown-toggle btn').addClass(bemC(b, 'toggle'))\n          .find('.filter-option').clone(true);\n        $(this).nextAll(bemS(b, 'toggle')).empty()\n          .append($filterOption)\n          .append('<svg class=\"isvg-angle-d\" role=\"img\">\\n' +\n            '<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#isvg-angle-d\"></use>\\n' +\n            '</svg>');\n      }).selectpicker({style: 'form-field'});\n    },\n    bindUIActions: function () {\n\n    }\n  }\n}();\n\nconst LineChart = function () {\n  const b = 'line-chart';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b)),\n      $eLabel: $(bemS(b, 'label')),\n      // Пример установки значений\n      yMin: 1,\n      yMax: 5,\n      xMin: Date.now() - 24*3600*1000,\n      xMax: Date.now(),\n      currency: '$',\n      pointsX: [],\n      values: function () {\n        let lineChartArr = [], value;\n        for (let i = 0; i < 24*60 + 1; i++) {\n          value = Math.random()*5;\n          if (i > 0 && value - lineChartArr[i - 1] > 0.2) {\n            value = lineChartArr[i - 1] + Math.random()*0.2;\n          } else if (i > 0 && value - lineChartArr[i - 1] < -0.2) {\n            value = lineChartArr[i - 1] - Math.random()*0.2;\n          }\n          if (value < 1) value++;\n          lineChartArr.push(Math.round(value*100)/100);\n        }\n        //console.log(lineChartArr);\n        return lineChartArr;\n      }()\n    },\n    init: function () {\n      s = this.settings;\n\n      s.values.forEach(function (item, i, arr) {\n        let date = new Date(s.xMin + i*60000), time;\n        if (date.getMinutes() === 0) {\n          time = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':00';\n          $(bemS(b, 'axis-x')).append($('<div class=' + bemC(b, 'axis-x-point') + '></div>').text(time).css('left', i/(s.values.length - 1)*100 + '%'));\n          s.pointsX.push({position: i/(s.values.length - 1), value: item, time: time});\n        }\n      });\n      //console.log(s.pointsX);\n\n      s.peity = $(bemS(b, 'peity')).text(s.values.join(',')).peity('line', {min: s.yMin, max: s.yMax});\n      $(bemS(b, 'ruler', 'min')).attr('data-ruler', s.currency + s.yMin);\n      $(bemS(b, 'ruler', 'max')).attr('data-ruler', s.currency + s.yMax);\n\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      // Update on resize\n      $(window).on('resize.lineChart', function () {\n        s.peity.change();\n      });\n\n      // Label on pointsX\n      $(bemS(b, 'inner'))\n        .on('mouseenter', function () {\n          s.$eLabel.addClass(bemC(b, 'label', 'visible'));\n        })\n        .on('mouseleave', function () {\n          s.$eLabel.removeClass(bemC(b, 'label', 'visible'));\n          $(bemS(b, 'axis-x-point')).removeClass(bemC(b, 'axis-x-point', 'current'));\n        })\n        .on('mousemove', function (e) {\n          let width = $(this).width(),\n            height = $(this).height(),\n            pointIndex = 0,\n            minDelta = Math.abs(e.clientX - s.pointsX[0].position * width);\n          s.pointsX.forEach(function (item, i, arr) {\n            if (i > 0 && Math.abs(e.clientX - item.position * width) < minDelta) {\n              pointIndex = i;\n              minDelta = Math.abs(e.clientX - item.position * width);\n            }\n          });\n          s.$eLabel.css({\n            left: s.pointsX[pointIndex].position * width,\n            height: (s.pointsX[pointIndex].value - s.yMin) / (s.yMax - s.yMin) * height\n          });\n          $(bemS(b, 'label-num')).text(s.currency + s.pointsX[pointIndex].value);\n          $(bemS(b, 'axis-x-point')).removeClass(bemC(b, 'axis-x-point', 'current')).eq(pointIndex).addClass(bemC(b, 'axis-x-point', 'current'));\n\n          //console.log('Current point: ' + s.pointsX[pointIndex].time + ' - ' + s.pointsX[pointIndex].value);\n        });\n    }\n  }\n}();\n\nconst SelectSm = function () {\n  const b = 'select-sm';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n\n      s.$b.on('loaded.bs.select', function () {\n        let $filterOption = $(this)\n          .nextAll('.dropdown-menu').addClass(bemC(b, 'menu')).end()\n          .nextAll('.dropdown-toggle').removeClass('dropdown-toggle btn').addClass(bemC(b, 'toggle'))\n          .find('.filter-option').clone(true);\n        $(this).nextAll(bemS(b, 'toggle')).empty()\n          .append($filterOption)\n          .append('<svg class=\"isvg-angle-d\" role=\"img\">\\n' +\n            '<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#isvg-angle-d\"></use>\\n' +\n            '</svg>');\n      }).selectpicker({style: '', width: 'fit'});\n    },\n    bindUIActions: function () {\n\n    }\n  }\n}();\n\nconst Wallet = function () {\n  const b = 'wallet';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(document).on('click', bemS(b, 'head'), function (e) {\n        $(this).closest(bemS(b)).toggleClass(bemC(b, '', 'open'));\n      });\n    }\n  }\n}();\n\n\n$(function () {\n  FormFieldLbl.init();\n  LineChart.init();\n  FormSelect.init();\n  SelectSm.init();\n  Wallet.init();\n\n  $('[data-toggle=\"popover\"]').popover();\n});","let bemS = (b, e = '', m = '') => '.' + b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class selector\n\nlet bemC = (b, e = '', m = '') => b + (e ? '__' + e : '') + (m ? '--' + m : ''); // return BEM class","const FormFieldLbl = function () {\n  const b = 'form-field-lbl';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n\n      s.$b.each(function () {\n        $(this).toggleClass(bemC(b, '', 'has-value'), !!$(this).find('input').val());\n      });\n    },\n    bindUIActions: function () {\n      $(document).on('focus', bemS(b), function () {\n        $(this).addClass(bemC(b, '', 'focus'));\n      }).on('blur', bemS(b), function (e) {\n        $(this).removeClass(bemC(b, '', 'focus'));\n      }).on('change', bemS(b), function (e) {\n        $(this).toggleClass(bemC(b, '', 'has-value'), !!$(e.target).val());\n      });\n    }\n  }\n}();\n","const FormSelect = function () {\n  const b = 'form-select';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n\n      s.$b.on('loaded.bs.select', function () {\n        let $filterOption = $(this)\n          .nextAll('.dropdown-menu').addClass(bemC(b, 'menu')).end()\n          .nextAll('.dropdown-toggle').removeClass('dropdown-toggle btn').addClass(bemC(b, 'toggle'))\n          .find('.filter-option').clone(true);\n        $(this).nextAll(bemS(b, 'toggle')).empty()\n          .append($filterOption)\n          .append('<svg class=\"isvg-angle-d\" role=\"img\">\\n' +\n            '<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#isvg-angle-d\"></use>\\n' +\n            '</svg>');\n      }).selectpicker({style: 'form-field'});\n    },\n    bindUIActions: function () {\n\n    }\n  }\n}();\n","const LineChart = function () {\n  const b = 'line-chart';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b)),\n      $eLabel: $(bemS(b, 'label')),\n      // Пример установки значений\n      yMin: 1,\n      yMax: 5,\n      xMin: Date.now() - 24*3600*1000,\n      xMax: Date.now(),\n      currency: '$',\n      pointsX: [],\n      values: function () {\n        let lineChartArr = [], value;\n        for (let i = 0; i < 24*60 + 1; i++) {\n          value = Math.random()*5;\n          if (i > 0 && value - lineChartArr[i - 1] > 0.2) {\n            value = lineChartArr[i - 1] + Math.random()*0.2;\n          } else if (i > 0 && value - lineChartArr[i - 1] < -0.2) {\n            value = lineChartArr[i - 1] - Math.random()*0.2;\n          }\n          if (value < 1) value++;\n          lineChartArr.push(Math.round(value*100)/100);\n        }\n        //console.log(lineChartArr);\n        return lineChartArr;\n      }()\n    },\n    init: function () {\n      s = this.settings;\n\n      s.values.forEach(function (item, i, arr) {\n        let date = new Date(s.xMin + i*60000), time;\n        if (date.getMinutes() === 0) {\n          time = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':00';\n          $(bemS(b, 'axis-x')).append($('<div class=' + bemC(b, 'axis-x-point') + '></div>').text(time).css('left', i/(s.values.length - 1)*100 + '%'));\n          s.pointsX.push({position: i/(s.values.length - 1), value: item, time: time});\n        }\n      });\n      //console.log(s.pointsX);\n\n      s.peity = $(bemS(b, 'peity')).text(s.values.join(',')).peity('line', {min: s.yMin, max: s.yMax});\n      $(bemS(b, 'ruler', 'min')).attr('data-ruler', s.currency + s.yMin);\n      $(bemS(b, 'ruler', 'max')).attr('data-ruler', s.currency + s.yMax);\n\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      // Update on resize\n      $(window).on('resize.lineChart', function () {\n        s.peity.change();\n      });\n\n      // Label on pointsX\n      $(bemS(b, 'inner'))\n        .on('mouseenter', function () {\n          s.$eLabel.addClass(bemC(b, 'label', 'visible'));\n        })\n        .on('mouseleave', function () {\n          s.$eLabel.removeClass(bemC(b, 'label', 'visible'));\n          $(bemS(b, 'axis-x-point')).removeClass(bemC(b, 'axis-x-point', 'current'));\n        })\n        .on('mousemove', function (e) {\n          let width = $(this).width(),\n            height = $(this).height(),\n            pointIndex = 0,\n            minDelta = Math.abs(e.clientX - s.pointsX[0].position * width);\n          s.pointsX.forEach(function (item, i, arr) {\n            if (i > 0 && Math.abs(e.clientX - item.position * width) < minDelta) {\n              pointIndex = i;\n              minDelta = Math.abs(e.clientX - item.position * width);\n            }\n          });\n          s.$eLabel.css({\n            left: s.pointsX[pointIndex].position * width,\n            height: (s.pointsX[pointIndex].value - s.yMin) / (s.yMax - s.yMin) * height\n          });\n          $(bemS(b, 'label-num')).text(s.currency + s.pointsX[pointIndex].value);\n          $(bemS(b, 'axis-x-point')).removeClass(bemC(b, 'axis-x-point', 'current')).eq(pointIndex).addClass(bemC(b, 'axis-x-point', 'current'));\n\n          //console.log('Current point: ' + s.pointsX[pointIndex].time + ' - ' + s.pointsX[pointIndex].value);\n        });\n    }\n  }\n}();\n","const SelectSm = function () {\n  const b = 'select-sm';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n\n      s.$b.on('loaded.bs.select', function () {\n        let $filterOption = $(this)\n          .nextAll('.dropdown-menu').addClass(bemC(b, 'menu')).end()\n          .nextAll('.dropdown-toggle').removeClass('dropdown-toggle btn').addClass(bemC(b, 'toggle'))\n          .find('.filter-option').clone(true);\n        $(this).nextAll(bemS(b, 'toggle')).empty()\n          .append($filterOption)\n          .append('<svg class=\"isvg-angle-d\" role=\"img\">\\n' +\n            '<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#isvg-angle-d\"></use>\\n' +\n            '</svg>');\n      }).selectpicker({style: '', width: 'fit'});\n    },\n    bindUIActions: function () {\n\n    }\n  }\n}();\n","const Wallet = function () {\n  const b = 'wallet';\n  let s;\n  return {\n    settings: {\n      $b: $(bemS(b))\n    },\n    init: function () {\n      s = this.settings;\n      this.bindUIActions();\n    },\n    bindUIActions: function () {\n      $(document).on('click', bemS(b, 'head'), function (e) {\n        $(this).closest(bemS(b)).toggleClass(bemC(b, '', 'open'));\n      });\n    }\n  }\n}();\n"]}